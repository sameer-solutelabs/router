{"ast":null,"code":"var _jsxFileName = \"/home/sameer/projects/demo/Routing-Project/frontend/src/pages/EventDetails.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { json, useParams } from 'react-router-dom';\nimport EventItem from '../components/EventItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EventDetails = () => {\n  _s();\n  const params = useParams();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"EventDetails\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Event Id :\", params.eventId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EventItem, {\n      event: data.event\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(EventDetails, \"+jVsTcECDRo3yq2d7EQxlN9Ixog=\", false, function () {\n  return [useParams];\n});\n_c = EventDetails;\nexport default EventDetails;\nexport const loader = async _ref => {\n  let {\n    request,\n    params\n  } = _ref;\n  const id = params.eventId;\n  const response = fetch('http://localhost:8080/events/' + id);\n  if (!response.ok) {\n    throw json({\n      message: 'Could not fetch details for selected event.'\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"EventDetails\");","map":{"version":3,"names":["React","json","useParams","EventItem","EventDetails","params","eventId","data","event","loader","request","id","response","fetch","ok","message","status"],"sources":["/home/sameer/projects/demo/Routing-Project/frontend/src/pages/EventDetails.js"],"sourcesContent":["import React from 'react'\nimport { json, useParams } from 'react-router-dom'\nimport EventItem from '../components/EventItem'\n\nconst EventDetails = () => {\n\n  const params = useParams();\n\n  return (\n    <>\n      <h1>EventDetails</h1>\n      <p>Event Id :{params.eventId}</p>\n      <EventItem  event={data.event}/>\n    </>\n  )\n}\n\nexport default EventDetails\n\n\nexport const loader = async ({request,params}) =>{\n\n  const id = params.eventId\n\n  const response = fetch('http://localhost:8080/events/' + id);\n\n  if(!response.ok){\n    throw json({ message:'Could not fetch details for selected event.' },{\n      status : 500\n    })\n  } else {\n    return response;\n  }\n\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,SAAS,QAAQ,kBAAkB;AAClD,OAAOC,SAAS,MAAM,yBAAyB;AAAA;AAAA;AAE/C,MAAMC,YAAY,GAAG,MAAM;EAAA;EAEzB,MAAMC,MAAM,GAAGH,SAAS,EAAE;EAE1B,oBACE;IAAA,wBACE;MAAA,UAAI;IAAY;MAAA;MAAA;MAAA;IAAA,QAAK,eACrB;MAAA,WAAG,YAAU,EAACG,MAAM,CAACC,OAAO;IAAA;MAAA;MAAA;MAAA;IAAA,QAAK,eACjC,QAAC,SAAS;MAAE,KAAK,EAAEC,IAAI,CAACC;IAAM;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA,gBAC/B;AAEP,CAAC;AAAA,GAXKJ,YAAY;EAAA,QAEDF,SAAS;AAAA;AAAA,KAFpBE,YAAY;AAalB,eAAeA,YAAY;AAG3B,OAAO,MAAMK,MAAM,GAAG,cAA2B;EAAA,IAApB;IAACC,OAAO;IAACL;EAAM,CAAC;EAE3C,MAAMM,EAAE,GAAGN,MAAM,CAACC,OAAO;EAEzB,MAAMM,QAAQ,GAAGC,KAAK,CAAC,+BAA+B,GAAGF,EAAE,CAAC;EAE5D,IAAG,CAACC,QAAQ,CAACE,EAAE,EAAC;IACd,MAAMb,IAAI,CAAC;MAAEc,OAAO,EAAC;IAA8C,CAAC,EAAC;MACnEC,MAAM,EAAG;IACX,CAAC,CAAC;EACJ,CAAC,MAAM;IACL,OAAOJ,QAAQ;EACjB;AAEF,CAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
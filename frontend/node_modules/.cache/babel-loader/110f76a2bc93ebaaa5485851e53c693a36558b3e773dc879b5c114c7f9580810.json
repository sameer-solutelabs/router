{"ast":null,"code":"var _jsxFileName = \"/home/sameer/projects/demo/Routing-Project/frontend/src/pages/EventsPage.js\",\n  _s = $RefreshSig$();\nimport { useLoaderData, json, defer, Await } from 'react-router-dom';\nimport { Suspense } from 'react';\nimport EventsList from '../components/EventsList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventsPage = () => {\n  _s();\n  const {\n    events\n  } = useLoaderData();\n  if (data.isError) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: data.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Suspense, {\n    fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"Loading ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 25\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(Await, {\n      resolve: events,\n      children: loadedEvent => /*#__PURE__*/_jsxDEV(EventsList, {\n        events: events\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 27\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_s(EventsPage, \"22Av1LduzrZxSsk8kXUUCix36lQ=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nexport async function loader() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    // return {isError: true,message : 'could not fetch event.'}\n    // throw new Response(JSON.stringify({message:'Could not fetch event.'}),{\n    //   status:500,\n    // });     \n    return json({\n      message: 'Could not fetch event.'\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useLoaderData","json","defer","Await","Suspense","EventsList","EventsPage","events","data","isError","message","textAlign","loadedEvent","loader","response","fetch","ok","status"],"sources":["/home/sameer/projects/demo/Routing-Project/frontend/src/pages/EventsPage.js"],"sourcesContent":["import { useLoaderData,json,defer,Await } from 'react-router-dom';\nimport { Suspense } from 'react';\nimport EventsList from '../components/EventsList';\n\nconst EventsPage = () => {\n  const {events} = useLoaderData();\n\n  if(data.isError){\n    return <p>{data.message}</p>    \n  }\n  return (\n    <Suspense fallback={<p style={{textAlign:'center'}}>Loading ...</p>}>\n      <Await resolve={events}>\n        {(loadedEvent) => <EventsList events={events} /> }\n      </Await>\n    </Suspense>\n)};\n\n\nexport default EventsPage;\n\n\nexport async function loader(){\n  const response = await fetch('http://localhost:8080/events');\n\n  if (!response.ok) {    \n    // return {isError: true,message : 'could not fetch event.'}\n    // throw new Response(JSON.stringify({message:'Could not fetch event.'}),{\n    //   status:500,\n    // });     \n    return json({message:'Could not fetch event.'},{\n      status:500\n    }) \n  } else {   \n    return response;\n  }  \n\n}"],"mappings":";;AAAA,SAASA,aAAa,EAACC,IAAI,EAACC,KAAK,EAACC,KAAK,QAAQ,kBAAkB;AACjE,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,UAAU,MAAM,0BAA0B;AAAC;AAElD,MAAMC,UAAU,GAAG,MAAM;EAAA;EACvB,MAAM;IAACC;EAAM,CAAC,GAAGP,aAAa,EAAE;EAEhC,IAAGQ,IAAI,CAACC,OAAO,EAAC;IACd,oBAAO;MAAA,UAAID,IAAI,CAACE;IAAO;MAAA;MAAA;MAAA;IAAA,QAAK;EAC9B;EACA,oBACE,QAAC,QAAQ;IAAC,QAAQ,eAAE;MAAG,KAAK,EAAE;QAACC,SAAS,EAAC;MAAQ,CAAE;MAAA,UAAC;IAAW;MAAA;MAAA;MAAA;IAAA,QAAK;IAAA,uBAClE,QAAC,KAAK;MAAC,OAAO,EAAEJ,MAAO;MAAA,UACnBK,WAAW,iBAAK,QAAC,UAAU;QAAC,MAAM,EAAEL;MAAO;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA;EAC1C;IAAA;IAAA;IAAA;EAAA,QACC;AACd,CAAC;AAAC,GAZGD,UAAU;EAAA,QACGN,aAAa;AAAA;AAAA,KAD1BM,UAAU;AAehB,eAAeA,UAAU;AAGzB,OAAO,eAAeO,MAAM,GAAE;EAC5B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB;IACA;IACA;IACA;IACA,OAAOf,IAAI,CAAC;MAACS,OAAO,EAAC;IAAwB,CAAC,EAAC;MAC7CO,MAAM,EAAC;IACT,CAAC,CAAC;EACJ,CAAC,MAAM;IACL,OAAOH,QAAQ;EACjB;AAEF;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}